<%= @matches %> {
  <%- if @user && @group -%>
  su <%= @user -%> <%= @group %>
  <%- end -%>

  # To use anything other than daily, the clean up script in lastaction MUST be updated
  daily

  missingok
  rotate <%= @days_to_keep %>
  compress
  <%- if @delaycompress -%>
  delaycompress
  <%- end -%>
  <%- if @rotate_if_empty -%>
  ifempty
  <%- else -%>
  notifempty
  <%- end -%>
  <%- if @copytruncate -%>
  copytruncate
  <%- end -%>
  <%- if @create -%>
  create <%= @create %>
  <%- end -%>
  <%- if @sharedscripts -%>
  sharedscripts
  <%- end -%>
  <%- if @prerotate -%>
  prerotate
    <%= @prerotate %>
  endscript
  <%- end -%>
  <%- if @postrotate -%>
  postrotate
    <%= @postrotate %>
  endscript
  <%- end -%>
  <%- if @maxsize -%>
  maxsize <%= @maxsize %>
  <%- end -%>
  firstaction
    # Remove empty .1 log files. There seems to be an issue where logrotate
    # will refuse to rotate the logs if an empty .1 log file exists.
    find <%= @matches %>* -wholename '/var/log/*' -name '*.1' -size 0 -delete
    # Remove files bigger than $SIZE in chronological order while use of  
    # disk space on the logging partition is greater than $MAX_USE
    SIZE='300M'
    MAX_USE=85
    for file in $(find <%= @matches %>* -type f -size +$SIZE -exec ls -tr {} +); do
      USE=$(df /var/log --output=pcent | sed -n '2p' | tr -d %)
        if [ $USE -gt $MAX_USE ]; then
          rm $file
        fi
    done;
  endscript
  lastaction
    # Clean up files older than maximum rotation. No-op unless "rotate" value is reduced,
    # because logrotate only deletes rotate+1, not all older files.
    # Thanks to https://serverfault.com/questions/636844/making-logrotate-remove-old-logs-after-reducing-rotate-value
    find <%= @matches %>.*  -maxdepth 1 -mtime +<%= @days_to_keep %> -delete -printf "deleting old file: %p\n"
  endscript
}
