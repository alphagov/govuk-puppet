#!/usr/bin/env ruby

def create_machines_hash
  machines_list= `/usr/local/bin/govuk_node_list --list`.split("\n")
  machines_names_hash = Hash.new

  machines_list.each do |machine|
    machine_fqn_name = machine.split(":")
    machines_names_hash[machine_fqn_name[0]]=machine_fqn_name[1]
  end

  return machines_names_hash
end

def hydrate_hostname(hostname, machines_names_hash)
  name=machines_names_hash[hostname]

  if (name != nil)
    return "%s with hostname: %s" % [name, hostname]
  end

  return hostname
end

all_machines = `/usr/local/bin/govuk_node_list`.split("\n")

unsafe_machines = `/usr/local/bin/govuk_node_list --puppet-class govuk_safe_to_reboot::careful,govuk_safe_to_reboot::no`.split("\n")
safe_machines = `/usr/local/bin/govuk_node_list --puppet-class govuk_safe_to_reboot::yes,govuk_safe_to_reboot::overnight`.split("\n")

machines_names_hash = create_machines_hash

# Safety check that we haven't added other safe to reboot options
# that we don't account for here.
unchecked_machines = all_machines - (unsafe_machines + safe_machines)

if unchecked_machines.length > 0
  puts "Some machines have a 'safe to reboot' class which isn't in check_reboots_required"
  exit 3
end

[unsafe_machines, safe_machines].each do |host_list|
  host_list.delete_if do |host|
    `/usr/lib/nagios/plugins/check_nrpe -H #{host} -t 20 -c check_reboot_required -u`
    $?.to_i == 0
  end
end

if safe_machines.length + unsafe_machines.length == 0
  puts 'No hosts need to be rebooted'
  exit 0
else
  puts 'Some hosts need to be rebooted to apply updates'
  if unsafe_machines.length > 0
    puts "\n"
    puts 'These hosts need to be rebooted manually:'
    unsafe_machines.sort.each do |hostname|
      hydrated_name = hydrate_hostname(hostname, machines_names_hash)
      puts "- #{hydrated_name}"
    end
  end
  if safe_machines.length > 0
    puts "\n"
    puts 'These hosts should reboot overnight:'
    safe_machines.sort.each do |hostname|
      hydrated_name = hydrate_hostname(hostname, machines_names_hash)
      puts "- #{hydrated_name}"
    end
  end
  exit 1
end
