---
- scm:
    name: env-sync-and-backup_Copy_Data_to_Staging
    scm:
        - git:
            url: git@github.com:alphagov/env-sync-and-backup.git
            branches:
              - master

- job:
    name: Copy_Data_to_Staging
    display-name: Copy_Data_to_Staging
    project-type: freestyle
    description: "This job currently copies all MongoDB databases from Backend. For MySQL, only whitelisted apps have
      their databases copied because several have sensitive data."
    properties:
        - github:
            url: https://github.com/alphagov/env-sync-and-backup/
        - inject:
            properties-content: |
              PARALLEL_JOBS=3
        - build-discarder:
            days-to-keep: 30
            artifact-num-to-keep: 5
    scm:
      - env-sync-and-backup_Copy_Data_to_Staging
    logrotate:
        numToKeep: 10
    triggers:
        - timed: |
            TZ=Europe/London
            H 22 * * *
    builders:
        - shell: |
            set +x
            cd "${WORKSPACE}"

            echo "Putting in the real MySQL root password"
            sed -i.bak "s/MYSQL_SRC_ROOT_PW=PLACEHOLDER/MYSQL_SRC_ROOT_PW='<%= @mysql_src_root_pw %>'/g" scripts/sync-mysql.sh
            sed -i "s/MYSQL_DST_ROOT_PW=PLACEHOLDER/MYSQL_DST_ROOT_PW='<%= @mysql_dst_root_pw %>'/g" scripts/sync-mysql.sh

            echo "Putting in the real Postgresql env-sync password"
            sed -i.bak "s/PG_SRC_ENV_SYNC_PW=PLACEHOLDER/PG_SRC_ENV_SYNC_PW='<%= @pg_src_env_sync_pw %>'/" scripts/sync-postgresql.sh
            sed -i "s/PG_DST_ENV_SYNC_PW=PLACEHOLDER/PG_DST_ENV_SYNC_PW='<%= @pg_dst_env_sync_pw %>'/" scripts/sync-postgresql.sh

            echo "Putting in the real Transition Postgresql password"
            sed -i.bak "s/PG_TR_SRC_ENV_SYNC_PW=PLACEHOLDER/PG_TR_SRC_ENV_SYNC_PW='<%= @pg_src_env_sync_pw %>'/" scripts/sync-transition-postgresql.sh
            sed -i "s/PG_TR_DST_ENV_SYNC_PW=PLACEHOLDER/PG_TR_DST_ENV_SYNC_PW='<%= @pg_dst_env_sync_pw %>'/" scripts/sync-transition-postgresql.sh

            echo "Putting in the real Warehouse Postgresql password"
            sed -i.bak "s/PG_WH_SRC_ENV_SYNC_PW=PLACEHOLDER/PG_WH_SRC_ENV_SYNC_PW='<%= @pg_src_env_sync_pw %>'/" scripts/sync-warehouse-postgresql.sh
            sed -i "s/PG_WH_DST_ENV_SYNC_PW=PLACEHOLDER/PG_WH_DST_ENV_SYNC_PW='<%= @pg_wh_dst_env_sync_pw %>'/" scripts/sync-warehouse-postgresql.sh

            set +e

            echo "Disabling Gor traffic replay"
            for box in $(govuk_node_list -C 'govuk_gor'); do
              ssh deploy@${box} 'echo "true" > /etc/govuk/env.d/FACTER_data_sync_in_progress; sudo initctl stop gor';
            done

            echo "Running Data Sync"
            bash sync production staging
            EXITCODE=$?

            echo "Re-enabling Gor traffic replay"
            for box in $(govuk_node_list -C 'govuk_gor'); do
              ssh deploy@${box} 'echo "" > /etc/govuk/env.d/FACTER_data_sync_in_progress; sudo initctl start gor';
            done

            exit $EXITCODE
    publishers:
      - trigger-parameterized-builds:
        - project: Success_Passive_Check
          condition: 'SUCCESS'
          predefined-parameters: |
            NSCA_CHECK_DESCRIPTION=<%= @service_description %>
            NSCA_OUTPUT=<%= @service_description %> success
        - project: Failure_Passive_Check
          condition: 'FAILED'
          predefined-parameters: |
            NSCA_CHECK_DESCRIPTION=<%= @service_description %>
            NSCA_OUTPUT=<%= @service_description %> failed
        - project: trigger_data_sync_complete
          condition: 'ALWAYS'
          predefined-parameters: |
            HOSTNAME=deploy.staging.publishing.service.gov.uk
            API_USER=ci_alphagov
            API_USER_PASSWORD=<%= @jenkins_api_user_password %>
      <% if @enable_slack_notifications %>
      - slack:
          team-domain: <%= @slack_team_domain %>
          auth-token: <%= @environment_variables['SECOND_LINE_SLACK_AUTH_TOKEN']%>
          build-server-url: <%= @slack_build_server_url %>
          notify-start: false
          notify-success: true
          notify-aborted: true
          notify-notbuilt: true
          notify-unstable: false
          notify-failure: true
          notify-backtonormal: false
          notify-repeatedfailure: false
          include-test-summary: false
          room: <%= @slack_room %>
      <% end %>
    wrappers:
        - ansicolor:
            colormap: xterm
        - timestamps
    parameters:
        - choice:
            name: JOBLIST
            description: 'Choose the thing to sync. All is the default, but some jobs may run but not do anything due to your config for the destination environment.'
            choices:
                - all
                - assets
                - elasticsearch-rummager
                - mongo-api
                - mongo-exceptions
                - mongo-licensify
                - mongo-normal
                - mongo-pp
                - mongo-router
                - mysql-normal
                - mysql-whitehall
                - postgresql-backend
                - postgresql-transition
                - postgresql-warehouse
