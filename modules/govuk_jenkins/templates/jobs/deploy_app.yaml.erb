---
- scm:
    name: alphagov-deployment_Deploy_App
    scm:
        - git:
            url: git@github.gds:gds/alphagov-deployment.git
            branches:
              - <%= @alphagov_deployment_branch %>
            wipe-workspace: true

- job:
    name: Deploy_App
    display-name: Deploy_App
    project-type: freestyle
    description: "<% if @environment != 'integration' %><a href=\"http://www.flickr.com/photos/fatty/9158066939/\">\r\n  <img src=\"https://farm3.staticflickr.com/2835/9158066939_374360ed56_n.jpg\">\r\n</a>\r\n<% end %><h2>You can monitor the application health using the <a href=\"https://grafana.<%= @app_domain %>/#/dashboard/file/application_http_error_codes.json\">4XX and 5XX status dashboard</a></h2>\r\n"
    <%- if @auth_token -%>
    auth-token: <%= @auth_token %>
    <%- end -%>
    properties:
        - github:
            url: https://github.gds/gds/alphagov-deployment/
    scm:
      - alphagov-deployment_Deploy_App
    builders:
        - shell: |
            ./jenkins.sh
            export DEPLOY_TO="<%= @environment -%>"
            export DEPLOY_TASK="$DEPLOY_TASK"
            export TAG="$TAG"
            export ORGANISATION="<%= @environment -%>"
            export CI_DEPLOY_JENKINS_API_KEY="<%= @ci_deploy_jenkins_api_key -%>"
            cd "$WORKSPACE/"
            logger -p INFO -t jenkins "DEPLOYMENT: ${JOB_NAME} ${BUILD_NUMBER} ${TARGET_APPLICATION} ${TAG} (${BUILD_URL})"
            if [ -d "$TARGET_APPLICATION" ]; then
              cd "$TARGET_APPLICATION/"
              if [ -e "deploy.sh" ]; then
                echo "---> Found deploy.sh, running 'sh -e deploy.sh'" >&2
                exec sh -e deploy.sh
              else
                echo "---> No deploy.sh found, running 'bundle exec cap \"${DEPLOY_TASK}\"'" >&2
                exec bundle exec cap "$DEPLOY_TASK"
              fi
            else
              git clone "git@github.com:alphagov/${TARGET_APPLICATION}.git"
              cd "$TARGET_APPLICATION/"
              git checkout $TAG
              BUNDLE_GEMFILE=${WORKSPACE}/Gemfile bundle exec cap "$DEPLOY_TASK"
            fi
    publishers:
        - trigger:
            project: Smokey
        - trigger-parameterized-builds:
            - project: GDS_Production_Backup, service-manual_rebuild_search_index
              predefined-parameters: TARGET_APPLICATION_GIT_REPO=$WORKSPACE/$TARGET_APPLICATION
              condition: 'UNSTABLE_OR_BETTER'
    wrappers:
        - ansicolor:
            colormap: xterm
        - build-name:
            name: '${ENV,var="TARGET_APPLICATION"} ${ENV,var="TAG"}'
    parameters:
        - choice:
            name: TARGET_APPLICATION
            description: Application to deploy.
            choices: <%= ['-- Choose an app'] + @applications %>
        - choice:
            name: DEPLOY_TASK
            description: Capistrano task to run (also available as $DEPLOY_TASK in deploy.sh)
            choices:
                - deploy
                - deploy:migrate_and_hard_restart
                - deploy:migrations
                - deploy:hard_restart
        - string:
            name: TAG
            description: Git tag/committish to deploy.
            default: release
