#!/bin/bash

set -e

S3_BUCKET=<%= @s3_bucket %>/<%= @fqdn %>
BACKUP_DIR=<%= @backup_dir %>
KEY_FINGERPRINT=<%= @private_gpg_key_fingerprint %>
REPLSET=$(/usr/bin/mongo --quiet --eval "db.isMaster().setName")
PRIMARY=$(/usr/bin/mongo --quiet --eval "db.isMaster().primary")

cd $BACKUP_DIR

function housekeeping {
  # Purge /var/lib/s3backup
  /bin/rm -rf $BACKUP_DIR/*
}
trap housekeeping EXIT

housekeeping

TIME="$(date +%s)"
# Download and decrypt most recent backup
LATEST_BACKUP=`/usr/bin/envdir <%= @env_dir %>/env.d s3cmd ls s3://${S3_BUCKET}/mongodump* | /usr/bin/tail -1 | /usr/bin/awk '{print $4}'`
/usr/bin/envdir <%= @env_dir %>/env.d s3cmd get --force "$LATEST_BACKUP"

# Enter the passphrase to unlock the gpg secret key
/bin/echo "Enter gpg Passphrase: "
read -s PASSPHRASE

/usr/bin/gpg --yes --passphrase "$PASSPHRASE" mongodump*.tar.gz.gpg && /bin/tar xzf mongodump* || exit 1

TIME="$(($(date +%s)-TIME))"
/usr/bin/printf "DOWNLOAD AND DECRYPTION FINISHED IN: ${TIME}s\n"

# Remove backup archive before restore begins
/bin/rm -f $BACKUP_DIR/mongodump*

TIME="$(date +%s)"
# Restore mongo database backup
/usr/bin/mongorestore $BACKUP_DIR --host=$REPLSET/$PRIMARY --drop  # Drop each target collection/database before restoring

TIME="$(($(date +%s)-TIME))"
/usr/bin/printf "RESTORE COMPLETED IN: ${TIME}s\n"
