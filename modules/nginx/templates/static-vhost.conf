<%- if scope.lookupvar('::aws_migration') -%>
# Set GOVUK-Request-Id if not set
# See http://nginx.org/en/docs/http/ngx_http_perl_module.html
perl_modules perl/lib;
perl_set $govuk_request_id '
  sub {
    my $r = shift;
    my $current_header = $r->header_in("GOVUK-Request-Id");

    if (defined $current_header && $current_header ne "") {
      return $current_header;
    } else {
      my $pid = $r->variable("pid");
      my $msec = $r->variable("msec");
      my $remote_addr = $r->variable("remote_addr");
      my $request_length = $r->variable("request_length");
      return "$pid-$msec-$remote_addr-$request_length";
    }
  }
';

<%- end -%>
<% if @enable_ssl -%>
server {
  server_name <%= @name %> <%= @aliases.join(" ") unless @aliases.empty? %>;
  listen 80<%= $is_default_vhost ? " default_server" : "" %>;
  rewrite ^/(.*) https://$host/$1 permanent;
}
<% end -%>

<%
  # @enable_ssl is used (for now) in the development environment to forcibly
  # disable SSL for these vhosts. TODO: roll out the *.dev.alphagov.co.uk SSL
  # certificate and get development behaving like everything else...

  ports = if !@enable_ssl
            [80]
          else
            [443]
          end
%>

<%- ports.each do |port| -%>
server {
  server_name <%= @name %> <%= @aliases.join(" ") unless @aliases.empty? %>;
  <%- if scope.lookupvar('::aws_migration') -%>
  # Send the Strict-Transport-Security header
  include /etc/nginx/add-sts.conf;
  <%- end -%>

  <%- if port == 443 -%>
  listen              443 ssl<%= $is_default_vhost ? " default_server" : "" %>;
  ssl_certificate     /etc/nginx/ssl/<%= @name %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @name %>.key;
  include             /etc/nginx/ssl.conf;
  <%- end -%>
  <%- if port == 80 -%>
  listen 80<%= $is_default_vhost ? " default_server" : "" %>;
  <%- end -%>
  <%- if scope.lookupvar('::aws_migration') -%>

  proxy_set_header GOVUK-Request-Id $govuk_request_id;
  <%- end -%>

  access_log <%= @logpath %>/<%= @access_log %> timed_combined;
  access_log <%= @logpath %>/<%= @json_access_log %> json_event;
  error_log <%= @logpath %>/<%= @error_log %>;

  <%- if @frame_options == "deny" -%>
  add_header X-Frame-Options DENY;
  <%- elsif @frame_options == "sameorigin" -%>
  add_header X-Frame-Options SAMEORIGIN;
  <%- end -%>
  <%- if scope.lookupvar('::aws_migration') and @deny_crawlers -%>
  location = /robots.txt {
    add_header content-type text/plain;
    return 200 'User-agent: *\nDisallow: /';
  }
  <%- end -%>

  <%- @locations.each do |http_path, filesystem_path| -%>
  location <%= http_path%> {
    alias <%= filesystem_path%>;
  }
  <%- end -%>

  <%= @extra_config %>
}
<% end -%>
