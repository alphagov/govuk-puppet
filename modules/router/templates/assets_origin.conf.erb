server {
  server_name <%= @vhost_name -%> <%= @vhost_aliases.join(' ') -%>;
  listen 80;
  rewrite ^/(.*) https://$host/$1 permanent;
}

server {
  server_name <%= @vhost_name -%> <%= @vhost_aliases.join(' ') -%>;

  listen              443 ssl;
  ssl_certificate     /etc/nginx/ssl/<%= @vhost_name -%>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @vhost_name -%>.key;
  include             /etc/nginx/ssl.conf;

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-Server $host;
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
<% if @real_ip_header != '' -%>

  # use an unspoofable header from an upstream cdn or l7 load balancer.
  real_ip_header <%= @real_ip_header -%>;
  real_ip_recursive on;
  set_real_ip_from 0.0.0.0/0;

  # Limit requests and connections based on $remote_addr.
  # NB: This may not be accurate if there is a L3 load balancer upstream and
  # real_ip_header cannot be set!
  limit_req zone=rate burst=10 nodelay;
  limit_conn connections 10;
<% end -%>

  access_log /var/log/nginx/<%= @vhost_name -%>-json.event.access.log json_event;
  error_log /var/log/nginx/<%= @vhost_name -%>-error.log;

  add_header "Access-Control-Allow-Origin" "*";
  add_header "Access-Control-Allow-Methods" "GET, OPTIONS";
  add_header "Access-Control-Allow-Headers" "origin, authorization";

  <%- @asset_routes.each do |alias_path, vhost_name| -%>
  location <%= alias_path %> {
    proxy_set_header Host <%= vhost_name %>.<%= @app_domain %>;
    proxy_pass https://<%= vhost_name %>.<%= @app_domain %>;
  }

  <%- end -%>
  location / {
    proxy_set_header Host static.<%= @app_domain %>;
    proxy_pass https://static.<%= @app_domain %>;
  }
}
