keepalive_timeout 120;

proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-Server $host;
proxy_set_header X-Forwarded-Host $proxy_add_x_forwarded_host;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_redirect off;
<% if @real_ip_header != '' -%>

# Use an unspoofable header from an upstream CDN or L7 load balancer.
real_ip_header <%= @real_ip_header -%>;
real_ip_recursive on;
set_real_ip_from 0.0.0.0/0;

# Limit requests and connections based on $remote_addr.
# NB: This may not be accurate if there is a L3 load balancer upstream and
# real_ip_header cannot be set!
limit_req zone=rate burst=5 nodelay;
limit_conn connections 4;
<% end -%>

proxy_read_timeout 20;

access_log /var/log/nginx/lb-access.log timed_combined;
access_log /var/log/nginx/lb-json.event.access.log json_event;
error_log  /var/log/nginx/lb-error.log;

# Endpoint that isn't cached, which is used to assert that an external
# service can receive a response from GOV.UK origin on www hostname. It
# is intended for pingdom monitoring
location /__canary__ {
  default_type application/json;
  add_header cache-control "max-age=0,no-store,no-cache";
  return 200 '{"message": "Tweet tweet"}\n';
}

# If slug contains no lowercase letters then lowercase it
# eg www.gov.uk/GOVERNMENT/GUIDANCE -> www.gov.uk/government/guidance
# eg WWW.GOV.UK/GOVERNMENT/GUIDANCE -> www.gov.uk/government/guidance
location ~ ^\/[A-Z]+[A-Z\W\d]+$ {
  rewrite ^(.*)$ https://$host$uri_lowercase permanent;
}

# Rewrite the path of legacy Whitehall assets.
# Whitehall writes paths to the applications assets inside content items, which
# can make it very hard to change the URL. This rewrites any request to
# /government/assets/* to the new path of /assets/whitehall. A redirect isn't
# used because there are lots of these and this would cause a substantial
# number of extra requests.
rewrite ^/government/assets/(.*)$ /assets/whitehall/$1;

<%- @app_specific_static_asset_routes.each do |alias_path, vhost_name| -%>
<%- proxy_host = "#{vhost_name}.#{@app_domain_internal}" -%>
<%- upstream = "$upstream_#{vhost_name.delete('-')}" -%>
# Static asset serving for <%= vhost_name %>
set <%= upstream %> https://<%= proxy_host %>;
location <%= alias_path %> {
  limit_req zone=rate burst=10 nodelay;
  limit_conn connections 10;
  proxy_set_header Host <%= proxy_host %>;
  proxy_pass <%= upstream %>;
}
<%- end -%>

location ~ ^/apply-for-a-licence/? {
  # Set proxy timeout to 50 seconds as a quick fix for problems
  # where civica QueryPayments calls are taking too long.
  proxy_read_timeout 50;
  proxy_pass http://varnish;
}

location ~ ^/apply-for-a-licence/assets/ {
  limit_req zone=rate burst=5 nodelay;
  limit_conn connections 25;
  proxy_pass http://varnish;
}

location ~ ^/performance/ {
  <%= scope.function_template(['router/fragments/_basic_auth.erb']) -%>

  limit_req zone=performance burst=10 nodelay;
  proxy_pass http://varnish;
}

# This list of URLS should be kept in sync with the POST-able routes in the
# feedback application: https://github.com/alphagov/feedback/blob/master/config/routes.rb#L13-L21
location ~ ^/contact/govuk(/(|service-feedback(/)?|problem_reports(/)?|foi(/)?|page_improvements(/)?|email-survey-signup(/)?|assisted-digital-survey-feedback(/)?|content_improvement(/)?))?$ {
  limit_req zone=contact burst=4 nodelay;
  proxy_pass http://varnish;
}

location / {
  proxy_busy_buffers_size <%= @proxy_busy_buffers_size -%>;
  proxy_buffers <%= @proxy_buffers -%>;
  proxy_buffer_size <%= @proxy_buffer_size -%>;
  <%= scope.function_template(['router/fragments/_basic_auth.erb']) -%>

  <% if @aws_migration == 'draft_cache' -%>
  add_header X-Robots-Tag "noindex";
  <% end -%>
  # HTML verification for DWP YouTube channel
  location = /dla-ending/google6db9c061ce178960.html {
    add_header Content-Type text/html;
    return 200 '';
  }

  location /robots.txt {
    root /usr/share/nginx/www;
  }

  proxy_pass http://varnish;
}

error_page 400 /400.html;
error_page 401 /401.html;
error_page 403 /403.html;
error_page 404 /404.html;
error_page 405 /405.html;
error_page 406 /406.html;
error_page 410 /410.html;
error_page 422 /422.html;
error_page 429 /429.html;
error_page 500 /500.html;
error_page 502 /502.html;
error_page 503 /503.html;
error_page 504 /504.html;

# Serve a friendly error for rate limited requests. Maintains backwards
# compat because these previously emitted 503.
error_page 429 /503.html;

# Set the Content-Type to UTF-8 on the static pages, since they contain UTF-8
# characters like the copyright symbol
charset utf-8;

location /400.html {
  root /usr/share/nginx/www;
  internal;
}
location /401.html {
  root /usr/share/nginx/www;
  internal;
}
location /403.html {
  root /usr/share/nginx/www;
  internal;
}
location /404.html {
  # Set Cache-Control headers on 404 pages since we overide those set by apps.
  # So that we dont fall through to the default provided by the CDN.
  add_header Cache-Control "public, max-age=<%= @page_ttl_404 -%>" always;
  root /usr/share/nginx/www;
  internal;
}
location /405.html {
  root /usr/share/nginx/www;
  internal;
}
location /406.html {
  root /usr/share/nginx/www;
  internal;
}
location /410.html {
  root /usr/share/nginx/www;
  internal;
}
location /422.html {
  root /usr/share/nginx/www;
  internal;
}
location /429.html {
  root /usr/share/nginx/www;
  internal;
}
location /500.html {
  root /usr/share/nginx/www;
  internal;
}
location /502.html {
  root /usr/share/nginx/www;
  internal;
}
location /503.html {
  root /usr/share/nginx/www;
  internal;
}
location /504.html {
  root /usr/share/nginx/www;
  internal;
}
